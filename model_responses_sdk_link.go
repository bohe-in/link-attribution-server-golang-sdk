/*
Link Attribution Server SDK

This is the api used by link attribution

API version: 0.100000
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package linkattribution

import (
	"encoding/json"
)

// checks if the ResponsesSdkLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesSdkLink{}

// ResponsesSdkLink struct for ResponsesSdkLink
type ResponsesSdkLink struct {
	AnalyticsTags *ResponsesLinkAnalyticTags `json:"analyticsTags,omitempty"`
	Data map[string]interface{} `json:"data,omitempty"`
	Slug string `json:"slug"`
	SocialMediaTags *ResponsesLinkSocialMediaTags `json:"socialMediaTags,omitempty"`
	Url string `json:"url"`
}

// NewResponsesSdkLink instantiates a new ResponsesSdkLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesSdkLink(slug string, url string) *ResponsesSdkLink {
	this := ResponsesSdkLink{}
	this.Slug = slug
	this.Url = url
	return &this
}

// NewResponsesSdkLinkWithDefaults instantiates a new ResponsesSdkLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesSdkLinkWithDefaults() *ResponsesSdkLink {
	this := ResponsesSdkLink{}
	return &this
}

// GetAnalyticsTags returns the AnalyticsTags field value if set, zero value otherwise.
func (o *ResponsesSdkLink) GetAnalyticsTags() ResponsesLinkAnalyticTags {
	if o == nil || IsNil(o.AnalyticsTags) {
		var ret ResponsesLinkAnalyticTags
		return ret
	}
	return *o.AnalyticsTags
}

// GetAnalyticsTagsOk returns a tuple with the AnalyticsTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesSdkLink) GetAnalyticsTagsOk() (*ResponsesLinkAnalyticTags, bool) {
	if o == nil || IsNil(o.AnalyticsTags) {
		return nil, false
	}
	return o.AnalyticsTags, true
}

// HasAnalyticsTags returns a boolean if a field has been set.
func (o *ResponsesSdkLink) HasAnalyticsTags() bool {
	if o != nil && !IsNil(o.AnalyticsTags) {
		return true
	}

	return false
}

// SetAnalyticsTags gets a reference to the given ResponsesLinkAnalyticTags and assigns it to the AnalyticsTags field.
func (o *ResponsesSdkLink) SetAnalyticsTags(v ResponsesLinkAnalyticTags) {
	o.AnalyticsTags = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ResponsesSdkLink) GetData() map[string]interface{} {
	if o == nil || IsNil(o.Data) {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesSdkLink) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ResponsesSdkLink) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *ResponsesSdkLink) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetSlug returns the Slug field value
func (o *ResponsesSdkLink) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *ResponsesSdkLink) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *ResponsesSdkLink) SetSlug(v string) {
	o.Slug = v
}

// GetSocialMediaTags returns the SocialMediaTags field value if set, zero value otherwise.
func (o *ResponsesSdkLink) GetSocialMediaTags() ResponsesLinkSocialMediaTags {
	if o == nil || IsNil(o.SocialMediaTags) {
		var ret ResponsesLinkSocialMediaTags
		return ret
	}
	return *o.SocialMediaTags
}

// GetSocialMediaTagsOk returns a tuple with the SocialMediaTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsesSdkLink) GetSocialMediaTagsOk() (*ResponsesLinkSocialMediaTags, bool) {
	if o == nil || IsNil(o.SocialMediaTags) {
		return nil, false
	}
	return o.SocialMediaTags, true
}

// HasSocialMediaTags returns a boolean if a field has been set.
func (o *ResponsesSdkLink) HasSocialMediaTags() bool {
	if o != nil && !IsNil(o.SocialMediaTags) {
		return true
	}

	return false
}

// SetSocialMediaTags gets a reference to the given ResponsesLinkSocialMediaTags and assigns it to the SocialMediaTags field.
func (o *ResponsesSdkLink) SetSocialMediaTags(v ResponsesLinkSocialMediaTags) {
	o.SocialMediaTags = &v
}

// GetUrl returns the Url field value
func (o *ResponsesSdkLink) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ResponsesSdkLink) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ResponsesSdkLink) SetUrl(v string) {
	o.Url = v
}

func (o ResponsesSdkLink) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesSdkLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnalyticsTags) {
		toSerialize["analyticsTags"] = o.AnalyticsTags
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	toSerialize["slug"] = o.Slug
	if !IsNil(o.SocialMediaTags) {
		toSerialize["socialMediaTags"] = o.SocialMediaTags
	}
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

type NullableResponsesSdkLink struct {
	value *ResponsesSdkLink
	isSet bool
}

func (v NullableResponsesSdkLink) Get() *ResponsesSdkLink {
	return v.value
}

func (v *NullableResponsesSdkLink) Set(val *ResponsesSdkLink) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesSdkLink) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesSdkLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesSdkLink(val *ResponsesSdkLink) *NullableResponsesSdkLink {
	return &NullableResponsesSdkLink{value: val, isSet: true}
}

func (v NullableResponsesSdkLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesSdkLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


