/*
Link Attribution Server SDK

This is the api used by link attribution

API version: 0.100000
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package linkattribution

import (
	"encoding/json"
)

// checks if the ResponsesAppErrorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsesAppErrorResponse{}

// ResponsesAppErrorResponse struct for ResponsesAppErrorResponse
type ResponsesAppErrorResponse struct {
	ApiVersion float64 `json:"api_version"`
	Code int32 `json:"code"`
	Message string `json:"message"`
}

// NewResponsesAppErrorResponse instantiates a new ResponsesAppErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsesAppErrorResponse(apiVersion float64, code int32, message string) *ResponsesAppErrorResponse {
	this := ResponsesAppErrorResponse{}
	this.ApiVersion = apiVersion
	this.Code = code
	this.Message = message
	return &this
}

// NewResponsesAppErrorResponseWithDefaults instantiates a new ResponsesAppErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsesAppErrorResponseWithDefaults() *ResponsesAppErrorResponse {
	this := ResponsesAppErrorResponse{}
	return &this
}

// GetApiVersion returns the ApiVersion field value
func (o *ResponsesAppErrorResponse) GetApiVersion() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *ResponsesAppErrorResponse) GetApiVersionOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *ResponsesAppErrorResponse) SetApiVersion(v float64) {
	o.ApiVersion = v
}

// GetCode returns the Code field value
func (o *ResponsesAppErrorResponse) GetCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ResponsesAppErrorResponse) GetCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ResponsesAppErrorResponse) SetCode(v int32) {
	o.Code = v
}

// GetMessage returns the Message field value
func (o *ResponsesAppErrorResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ResponsesAppErrorResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ResponsesAppErrorResponse) SetMessage(v string) {
	o.Message = v
}

func (o ResponsesAppErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsesAppErrorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_version"] = o.ApiVersion
	toSerialize["code"] = o.Code
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

type NullableResponsesAppErrorResponse struct {
	value *ResponsesAppErrorResponse
	isSet bool
}

func (v NullableResponsesAppErrorResponse) Get() *ResponsesAppErrorResponse {
	return v.value
}

func (v *NullableResponsesAppErrorResponse) Set(val *ResponsesAppErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsesAppErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsesAppErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsesAppErrorResponse(val *ResponsesAppErrorResponse) *NullableResponsesAppErrorResponse {
	return &NullableResponsesAppErrorResponse{value: val, isSet: true}
}

func (v NullableResponsesAppErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsesAppErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


